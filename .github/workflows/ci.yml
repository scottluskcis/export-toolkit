name: CI
permissions:
  contents: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read .nvmrc
        id: nvmrc
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Verify Node.js version matches .nvmrc for v22
        if: matrix.node-version == '22.x'
        run: |
          if [[ "$(node --version)" != v${{ steps.nvmrc.outputs.NODE_VERSION }}.* ]]; then
            echo "Warning: Node version doesn't match .nvmrc"
          fi

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm run typecheck

      - name: Lint
        run: pnpm run lint

      - name: Format check
        run: pnpm run format:check

      - name: Build
        run: pnpm run build

      - name: Test
        run: pnpm run test
        if: matrix.node-version != '22.x'

      - name: Test coverage
        run: pnpm run test:coverage
        if: matrix.node-version == '22.x'

